import { ComponentFactoryResolver, ElementRef, EventEmitter, ModuleWithProviders, OnChanges, OnDestroy, OnInit, SimpleChange, ViewContainerRef } from '@angular/core';
export declare class AutocompleteComponent implements OnInit, OnChanges {
    items: any[];
    config: any;
    selectEvent: EventEmitter<any>;
    inputChangedEvent: EventEmitter<any>;
    inputElement: HTMLInputElement;
    value: string;
    candidates: any[];
    candiatesLabels: any[];
    selectedIndex: number;
    showAutoComplete: boolean;
    placeholder: string;
    private sourceField;
    private thisElement;
    constructor(elementRef: ElementRef);
    ngOnInit(): void;
    ngOnChanges(): void;
    enterText(event: any): void;
    onSelect(idx: number): void;
    filterItems(search: string): void;
    private getFieldValue(object, path);
    private isNull(object);
    private buildLabels();
    private filterItem(item, path, search);
}
export declare class AutocompleteDirective implements OnInit, OnDestroy, OnChanges {
    private resolver;
    viewContainerRef: ViewContainerRef;
    config: any;
    items: any;
    ngModel: String;
    ngModelChange: EventEmitter<{}>;
    inputChangedEvent: EventEmitter<{}>;
    selectEvent: EventEmitter<{}>;
    private componentRef;
    private thisElement;
    private autocompleteElement;
    private inputElement;
    private tabIndex;
    constructor(resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: {
        [propKey: string]: SimpleChange;
    }): void;
    showAutocomplete(): void;
    hideAutocomplete: (event?: any) => void;
    onInputChanged: (val: string) => void;
    onSelect: (item: any) => void;
    private createDiv();
    private createAutocomplete();
}
export declare class AutocompleteModule {
    static forRoot(): ModuleWithProviders;
}
